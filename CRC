# Server for CRC
import socket
import math
def xor(a, b):
    result = ""
    for i in range(1, len(b)):
        if a[i] == b[i]:
            result+='0'
        else:
            result+='1'
    return result

def mod2div(dividend, divisor):
    pick = len(divisor)
    tmp = dividend[0 : pick]

    while pick < len(dividend):
        if tmp[0] == '1':
            tmp = xor(divisor, tmp) + dividend[pick]
        else:
            tmp = xor('0'*pick, tmp) + dividend[pick]
        pick += 1

    if tmp[0] == '1':
        tmp = xor(divisor, tmp)
    else:
        tmp = xor('0'*pick, tmp)

    checkword = tmp
    return checkword

mysocket=socket.socket()
mysocket.bind(('localhost',9999))
mysocket.listen(10)
while(True):
    conn,addr=mysocket.accept()
    conn.send("Connected to server".encode())
    while(True):
        divi=conn.recv(1024).decode()
        recv_mess=conn.recv(1024).decode()
        print("The divisor used was:",divi)
        print("The received code word from the client is:",recv_mess)
        rem=mod2div(recv_mess,divi)
        if(int(rem,2)==0):
            print("The exact code word has been received.")
            conn.send("OK".encode())
        else:
            print("Some bits got collapsed.")
            conn.send("No".encode())
  # Client CRC
import socket
import math
def xor(a, b):
    result = ""
    for i in range(1, len(b)):
        if a[i] == b[i]:
            result+='0'
        else:
            result+='1'
    return result

def mod2div(dividend, divisor):
    pick = len(divisor)
    tmp = dividend[0 : pick]

    while pick < len(dividend):
        if tmp[0] == '1':
            tmp = xor(divisor, tmp) + dividend[pick]
        else:
            tmp = xor('0'*pick, tmp) + dividend[pick]
        pick += 1

    if tmp[0] == '1':
        tmp = xor(divisor, tmp)
    else:
        tmp = xor('0'*pick, tmp)

    checkword = tmp
    return checkword

mysocket=socket.socket()
mysocket.connect(('localhost',9999))
print(mysocket.recv(1024).decode())
while(True):
    data=input("Enter the data:")
    new_data=data
    # req_bits=math.ceil(math.log(len(data),2))+1
    diviso=input("Enter the divisor:")
    req_bits = len(diviso) - 1
    for i in range(req_bits):
        new_data+="0"
    print("The augmented data word is:",new_data)
    rem=mod2div(new_data,diviso)
    code_word=data+rem
    print("The code word is:",code_word)
    mysocket.send(diviso.encode())
    mysocket.send(code_word.encode())
    if(mysocket.recv(1024).decode()=="OK"):
        print("The server received the message successfully.")
    else:
        print("The server didn't receive the message successfully.")
